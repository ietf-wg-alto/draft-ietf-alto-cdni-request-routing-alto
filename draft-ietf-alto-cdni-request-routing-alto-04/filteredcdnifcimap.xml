    <section anchor="filteredcdnifcimap" title="Filtered CDNI FCI Map using Capabilities">
    	<t>
    		This document defines a new service named "Filtered CDNI FCI Map Service". The semantic of a Filtered CDNI FCI Map is that given some capabilities, which footprints have at least one of these capabilities. And a filtered CDNI FCI map is a CDNI FCI map for which an ALTO client may supply additional capabilities to limit the scope of the resulting CDNI FCI map. The relationship between a filtered CDNI FCI map and a CDNI FCI Map is similar to the relationship between a filtered network/cost map and a network/cost map.
    	</t>
    	<section title="Media Type">
        <t>
          Since a filtered CDNI FCI map is still a CDNI FCI map, it uses the media type defined for CDNI FCI maps in <xref target="cdnifcimapmediatype"/>.
        </t>
    	</section>
    	<section title="HTTP Method">
        <t>
          A filtered CDNI FCI map is requested using the HTTP POST method.
        </t>
    	</section>
    	<section title="Accept Input Parameters">
    	<t>The input parameters for a filtered CDNI FCI map are supplied in the entity body of the POST request. This document specifies the input parameters with a data format indicated by the media type "application/alto-cdni-filter", which is a JSON object of type ReqFilteredCDNIFCIMap, where:</t>
  		<figure align="left">
            <artwork align="left"><![CDATA[
   object {
       JSONString capability-type;
       JSONValue capability-value;
   } CDNIFCICapability;

   object {
       [CDNIFCICapability cdni-fci-capabilities<0..*>;]
   } ReqFilteredCDNIFCIMap;
]]>         </artwork>
        </figure>
        <t>with fields: </t>
        <t><list style="hanging">
            <t hangText="capability-type:">
            	The same as Base Advertisement Object's capability-type defined in Section 5.1 of <xref target="RFC8008" pageno="false" format="default"/>.
            </t>
            <t hangText="capability-value:">
                The same as Base Advertisement Object's capability-value defined in Section 5.1 of <xref target="RFC8008" pageno="false" format="default"/>.
            </t>
            <t hangText="cdni-fci-capabilities:">
            	A list of CDNI FCI capabilities defined in Section 5.1 of <xref target="RFC8008" pageno="false" format="default"/> for which footprints are to be returned. If a list is empty, the ALTO server MUST interpret it as a request for the full CDNI FCI Map. The ALTO server MUST interpret entries appearing in a list multiple times as if they appeared only once. The ALTO client SHOULD avoid the same entries appearing in "cdni-fci-capabilities" multiple times. If the "cdni-fci-capabilities" field is not present, the ALTO server MUST interpret it as a request for the full CDNI FCI Map. If a "capability-type" or a "capability-value" is not defined, the ALTO server MUST ignore this capability. If it is the only capability in the list, the ALTO server MUST return nothing.
            </t>
        </list></t>
    	</section>
    	<section title="Capabilities">
    		<t>
    		    None.
    	    </t>
    	</section>
    	<section title="Uses">
        <t>
          The resource ID of the CDNI FCI map based on which the filtering is performed.
        </t>
    	</section>
    	<section title="Response">
      <t>
        The response MUST indicate an error, using ALTO protocol error handling specified in Section 8.5 of the ALTO protocol  <xref target="RFC7285" pageno="false" format="default"/>.
      </t>
      <t>
        When a query of a filtered CDNI FCI map includes syntax errors, the ALTO server MUST return an "E_SYNTAX" error.
      </t>
      <t>
        When the syntax of a query is correct, there may be some errors in this query's semantics. The ALTO server MUST return an "E_INVALID_FIELD_VALUE" error in following cases:
        <list style="symbols">
        <t>The value of "capability-type" is null;</t>
        <t>The value of "capability-value" is null;</t>
        <!-- <t>If a capability in the "cdni-fci-capabilities" only has "capability-type" or only has "capability-value" or the value of "capability-value" is null, these cases belong to E_MISSING_FIELD errors.</t> -->
        <t>The value of "capability-value" is inconsistent with "capability-type".</t>
        </list>
      </t>
    	<t>
        After a query of filtered CDNI FCI map is correct both in syntax and semantics, the ALTO server will return a filtered CDNI FCI map according to this query.
    		The format of a filtered CDNI FCI map is the same as an unfiltered CDNI FCI map. See <xref target="cdnifcimapencoding"/> for the format.
    	</t>
    	<t>
    		The returned CDNI FCI map MUST contain only BaseAdvertisementObject objects whose CDNI capability object is the superset of one of CDNI capability object in "cdni-fci-capabilities". Specifically, that a CDNI capability object A is the superset of another CDNI capability object B means that these two CDNI capability objects have the same capability type and mandatory properties in capability value of A MUST include mandatory properties in capability value of B semantically. For example, if a CDNI FCI capability in "cdni-fci-capabilities" is Delivery Protocol capability object with "http/1.1" in its field "delivery-protocols" and the original full CDNI FCI map has two CDNI FCI objects whose capabilities are Delivery Protocol capability objects with ["http/1.1"] and ["http/1.1", "https/1.1"] in their field "delivery-protocols" respectively, both of these two CDNI FCI objects MUST be returned. If the input parameters contain a CDNI capability object that is not currently defined, the ALTO server MUST behave as if the CDNI capability object did not appear in the input parameters. 
    	</t>
    	<t>
    		The version tag included in the "vtag" field of the response MUST correspond to the full CDNI FCI map resource from which the filtered CDNI FCI map is provided. This ensures that a single, canonical version tag is used independently of any filtering that is requested by an ALTO client.
    	</t>
    	</section>
    	<section title="Examples">
    		<section title="IRD Example">
    		<t>
    			We use the same IRD example by <xref target="IRDexample"/>.
    		</t> 
    		</section>
    		<section title="Basic Example">
    			<t>
    			    This example is filtering the full CDNI FCI map example in <xref target="fullcdnifcimap"/>.
    			</t>
		    <figure align="left">
              <artwork align="left"><![CDATA[
   POST /cdnifcimap/filtered HTTP/1.1
   HOST: alto.example.com
   Content-Type: application/cdnifilter+json
   Accept: application/alto-cdnifcimap+json

   {
     "cdni-fci-capabilities": [
       {
         "capability-type": "FCI.DeliveryProtocol",
         "capability-value": {
           "delivery-protocols": [
              "http/1.1"
           ]
         }
       }
     ]
   }
]]></artwork>
            </figure>

		    <figure align="left">
              <artwork align="left"><![CDATA[
    HTTP/1.1 200 OK
    Content-Length: XXX
    Content-Type: application/alto-cdnifcimap+json
    {
      "meta" : {
        "vtag": {
          "resource-id": "my-default-cdnifci-map",
          "tag": "da65eca2eb7a10ce8b059740b0b2e3f8eb1d4785"
        }
      },
      "cdni-fci-map": {
        "capabilities": [
          {
            "capability-type": "FCI.DeliveryProtocol",
            "capability-value": {
              "delivery-protocols": [
                "http/1.1"
              ]
            },
            "footprints": [
              <Footprint objects>
            ]
          },
          {
            "capability-type": "FCI.DeliveryProtocol",
            "capability-value": {
              "delivery-protocols": [
                "https/1.1",
                "http/1.1"
              ]
            },
            "footprints": [
              <Footprint objects>
            ]
          }
        ]
      }
    }
]]></artwork>
            </figure>
    		</section>
    		<section title="Incremental Updates Example">
          <t>
            In this example, the ALTO client only cares about the updates of one Delivery Protocol object whose value is "http/1.1". So it adds its limitation of capabilities in "input" field of the POST request.
          </t>
        <figure align="left">
              <artwork align="left"><![CDATA[
  POST /updates/cdnifcimaps HTTP/1.1
  Host: fcialtoupdate.example.com
  Accept: text/event-stream,application/alto-error+json
  Content-Type: application/alto-updatestreamparams+json
  Content-Length: ###

  { "add": {
      "my-fci-stream": {
          "resource-id": "my-filtered-cdnifci-map",
          "input": {
            "cdni-fci-capabilities": [
            {
              "capability-type": "FCI.DeliveryProtocol",
              "capability-value": {
                "delivery-protocols": [
                  "http/1.1"
                ]
              }
            }
          ]                
        }
      }
    }
  }

  HTTP/1.1 200 OK
  Connection: keep-alive
  Content-Type: text/event-stream

  event: application/alto-updatestreamcontrol+json
  data: {"control-uri":
  data: "http://alto.example.com/updates/streams/3141592653590"}

  event: application/alto-cdnifcimap+json,my-fci-stream
  data: { ... full filtered CDNI FCI map ... } 

  event: application/merge-patch+json,my-fci-stream
  data: {
  data:   "meta": {
  data:     "vtag": {
  data:       "tag": "dasdfa10ce8b059740bddsfasd8eb1d47853716"
  data:     }
  data:   },
  data:   {
  data:     "capability-type": "FCI.DeliveryProtocol",
  data:     "capability-value": {
  data:       "delivery-protocols": [
  data:         "http/1.1"
  data:       ]
  data:     },
  data:     "footprints": [
  data:       <Footprint objects that are different from 
  data:        footprint objects in delivery-protocols http/1.1>
  data:     ]
  data:   }     
  data: }

  event: application/json-patch+json,my-fci-stream
  data: [
  data:   {
  data:     "op": "replace",
  data:     "path": "/meta/vtag/tag",
  data:     "value": "a10ce8b059740b0b2e3f8eb1d4785acd42231bfe"
  data:   },
  data:   { "op": "add",
  data:     "path": "/cdni-fci-map/capabilities/0/footprints/-",
  data:     "value": "ipv4:192.0.2.0/24"
  data:   }
  data: ]
                ]]></artwork>
            </figure>         
    		</section>
    	</section>
    </section>

