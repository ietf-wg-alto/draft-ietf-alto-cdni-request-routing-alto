    <section anchor="background" title="Background">
      <t>The design of CDNI FCI transport using ALTO depends on the understanding of both FCI semantics and ALTO. Hence, we start with a review of both.
      </t>

      <section title="Semantics of FCI Advertisement" anchor="bgSemantics">
        <t>The CDNI document on "Footprint and Capabilities Semantics" <xref target="RFC8008"/> defines the semantics for the CDNI FCI. It thus provides guidance on what Footprint and Capabilities mean in a CDNI context and how a protocol solution should in principle look like. The definitions in [RFC8008] depend on [RFC8006]. Here we briefly summarize key related points of [RFC8008] and [RFC8006]. For a detailed discussion, the reader is referred to the RFCs.
        </t>

        <t><list style="symbols">
          <t>Footprint and capabilities are tied together and cannot be interpreted independently from each other. In such cases, i.e., where capabilities must be expressed on a per footprint basis, it may be beneficial to combine footprint and capabilities advertisement. [RFC8008] integrates footprint and capabilities with an approach of "capabilities with footprint restrictions".</t>

          <t>Given that a large part of Footprint and Capabilities Advertisement will actually happen in contractual agreements, the semantics of CDNI Footprint and Capabilities advertisement refers to answering the following question: what exactly still needs to be advertised by the CDNI FCI? For instance, updates about temporal failures of part of a footprint can be useful information to convey via the CDNI request routing interface. Such information would provide updates on information previously agreed in contracts between the participating CDNs. In other words, the CDNI FCI is a means for a dCDN to provide changes/updates regarding a footprint and/or capabilities it has prior agreed to serve in a contract with a uCDN. Hence, server push and incremental encoding will be necessary techniques.</t>

          <t>Multiple types of footprints are defined in <xref target="RFC8006"/>:
            <list style="symbols">
              <t>List of ISO Country Codes</t>
              <t>List of AS numbers</t>
              <t>Set of IP-prefixes</t>
            </list>
          A "set of IP-prefixes" must be able to contain full IP addresses, i.e., a /32 for IPv4 and a /128 for IPv6, and also IP prefixes with an arbitrary prefix length. There must also be support for multiple IP address versions, i.e., IPv4 and IPv6, in such a footprint.
          </t>

          <t>For all of these mandatory-to-implement footprint types, footprints can be viewed as constraints for delegating requests to a dCDN: A dCDN footprint advertisement tells the uCDN the limitations for delegating a request to the dCDN. For IP prefixes or ASN(s), the footprint signals to the uCDN that it should consider the dCDN a candidate only if the IP address of the request routing source falls within the prefix set (or ASN, respectively). The CDNI specifications do not define how a given uCDN determines what address ranges are in a particular ASN. Similarly, for country codes, a uCDN should only consider the dCDN a candidate if it covers the country of the request routing source. The CDNI specifications do not define how a given uCDN determines the country of the request routing source. Multiple footprint constraints are additive, i.e., the advertisement of different types of footprint narrows the dCDN candidacy cumulatively.
          </t>

          <t>The following capabilities are defined as "base" capabilities, i.e., ones that are needed in any case and therefore constitute mandatory capabilities to be supported by the CDNI FCI:
          <list style="symbols">
            <t>Delivery Protocol (e.g., HTTP vs. RTMP)</t>
            <t>Acquisition Protocol (for acquiring content from a uCDN)</t>
            <t>Redirection Mode (e.g., DNS Redirection vs. HTTP Redirection as discussed in <xref target="RFC7336" pageno="false" format="default"/>)</t>
            <t>Capabilities related to CDNI Logging (e.g., supported logging mechanisms)</t>
            <t>Capabilities related to CDNI Metadata (e.g., authorization
            algorithms or support for proprietary vendor metadata)</t>
          </list>
          </t>
        </list></t>
      </section>
     <section anchor="bgALTO" title="ALTO Background and Benefits">
        <t>Application-Layer Traffic Optimization (ALTO) <xref target="RFC7285" pageno="false" format="default"/> is an approach for guiding the resource provider selection process in distributed applications that can choose among several candidate resources providers to retrieve a given resource. By conveying network layer (topology) information, an ALTO server can provide important information to "guide" the resource provider selection process in distributed applications. Usually, it is assumed that an ALTO server conveys information these applications cannot measure themselves <xref target="RFC5693" pageno="false" format="default"/>.
        </t>

        <t>
         Originally, ALTO was motivated by the huge amount of cross-ISP traffic generated by P2P applications <xref target="RFC5693" pageno="false" format="default"/>. Recently, however, ALTO is also being considered for improving the request routing in CDNs <xref target="I-D.jenkins-alto-cdn-use-cases"/>. In this context, it has also been proposed to use ALTO for selecting an entry-point in a downstream NSP's network (see section 3.4 "CDN delivering Over-The-Top of a NSP's network" in <xref target="I-D.jenkins-alto-cdn-use-cases"/>). Also, the CDNI problem statement explicitly mentions ALTO as a candidate protocol for "actual algorithms for selection of CDN or Surrogate by Request-Routing systems" <xref target="RFC6707" pageno="false" format="default"/>.
        </t>

        <t>The following reasons make ALTO a suitable candidate protocol for downstream CDN selection as part of CDNI request routing and in particular for an FCI protocol:</t>

        <t><list style="symbols">
          <t>CDN request routing is done at the application layer. ALTO is a protocol specifically designed to improve application layer traffic (and application layer connections among hosts on the Internet) by providing additional information to applications that these applications could not easily retrieve themselves. For CDNI, this is exactly the case: a uCDN wants to improve application layer CDN request routing by using dedicated information (provided by a dCDN) that the uCDN could not easily obtain otherwise.</t>

          <t>The semantics of an ALTO network map is an exact match for the needed information to convey a footprint by a downstream CDN, in particular if such a footprint is being expressed by IP-prefix ranges.</t>
          <t>Security: ALTO maps can be signed and hence provide inherent integrity protection (see <xref target="security"/>).</t>

          <t>RESTful-Design: The ALTO protocol has undergone extensive revisions in order to provide a RESTful design regarding the client-server interaction specified by the protocol. A CDNI FCI interface based on ALTO would inherit this RESTful design.</t>

          <t>Error-handling: The ALTO protocol has undergone extensive revisions in order to provide sophisticated error-handling, in particular regarding unexpected cases. A CDNI FCI interface based on ALTO would inherit this thought-through and mature error-handling.</t>

          <t>Filtered network map: The ALTO Map Filtering Service (see <xref target="RFC7285" pageno="false" format="default"/> for details) would allow a uCDN to query only for parts of an ALTO map.
          </t>

          <t>Server-initiated Notifications and Incremental Updates: In case the footprint or the capabilities of a downstream CDN change abruptly (i.e., unexpectedly from the perspective of an upstream CDN), server-initiated  notifications would enable a dCDN to directly inform an upstream CDN about such changes. Consider the case where - due to failure - part of the footprint of the dCDN is not functioning, i.e., the CDN cannot serve content to such clients with reasonable QoS. Without server-initiated notifications, the uCDN might still use a very recent network and cost map from dCDN, and therefore redirect requests to dCDN which it cannot serve. Similarly, the possibility for incremental updates would enable efficient conveyance of the aforementioned (or similar) status changes by the dCDN to the uCDN. The newest design of ALTO supports server pushed incremental updates <xref target="I-D.ietf-alto-incr-update-sse"/>. </t>

          <t>Content Availability on Hosts: A dCDN might want to express CDN capabilities in terms of certain content types (e.g., codecs/formats, or content from certain content providers). The new endpoint property for ALTO would enable a dCDN to make such information available to an upstream CDN. This would enable a uCDN to determine if a given dCDN actually has the capabilities for a given request with respect to the type of content requested.</t>

          <t>Resource Availability on Hosts or Links: The capabilities on links (e.g. maximum bandwidth) or caches (e.g. average load) might be useful information for an upstream CDN for optimized downstream CDN selection. For instance, if a uCDN receives a streaming request for content with a certain bitrate, it needs to know if it is likely that a dCDN can fulfill such stringent application-level requirements (i.e., can be expected to have enough consistent bandwidth) before it redirects the request. In general, if ALTO could convey such information via new endpoint properties, it would enable more sophisticated means for downstream CDN selection with ALTO.</t>
        </list></t>
        <!--
        <t>Why ALTO cannot be the request routing protocol itself ...
        </t>
        -->
      </section> <!-- ALTO background -->
    </section>
